name: CI/CD DevOps Mini  ❄️

on:
  push:
    branches: [ main ]
    paths:
      - "03_app/**"
      - ".github/workflows/ci-cd.yml"

env:
  IMAGE_REPO: ${{ secrets.DOCKERHUB_USER }}/flask-demo   # repo chuẩn
  IMAGE_TAG: ${{ github.sha }}                           # SHA commit
  IMAGE_FULL: ${{ secrets.DOCKERHUB_USER }}/flask-demo:${{ github.sha }}

jobs:
# ─────────────────────────────────────────────────────────────
# 1. Unit test (Pytest)
# ─────────────────────────────────────────────────────────────
  test:
    name: 🧪 Unit Test
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: Check Python vesion (local)
        run: python3 --version

      - name: Install dependencies
        run: |
          pip3 install --break-system-packages -r 03_app/requirements.txt
          pip3 install --break-system-packages pytest


      - name: Run pytest
        run: python3 -m pytest 03_app -q

# ─────────────────────────────────────────────────────────────
# 2. Trivy security scan
# ─────────────────────────────────────────────────────────────
  trivy-scan:
    name: 🔍 Trivy Scan
    runs-on: self-hosted
    needs: test        # chỉ chạy khi test pass

    steps:
      - uses: actions/checkout@v4

      - name: Build local image for scan
        run: docker build --network=host -t flask-demo:test ./03_app

      - name: Run Trivy
        uses: aquasecurity/trivy-action@master  # phiên bản hợp lệ
        with:
          image-ref: "flask-demo:test"
          severity: CRITICAL,HIGH
          format: table
          exit-code: 1       # FAIL nếu có CVE mức cao

# ─────────────────────────────────────────────────────────────
# 3. Build & Push image
# ─────────────────────────────────────────────────────────────
  build-push:
    name: 🏗️ Build & Push
    runs-on: self-hosted
    needs: trivy-scan      # chạy sau khi scan pass

    steps:
      - uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: ./03_app
          push: true
          tags: ${{ env.IMAGE_FULL }}
          build-args: ""
          network: host  
# ─────────────────────────────────────────────────────────────
# 4. Deploy to K3s
# ─────────────────────────────────────────────────────────────
  deploy:
    name: 🚀 Deploy to K3s
    runs-on: self-hosted
    needs: build-push

    steps:
      - uses: actions/checkout@v4   # chỉ cần repo để tham chiếu

      - name: Set kubeconfig
        run: echo "${{ secrets.KUBE_CONFIG_B64 }}" | base64 -d > $HOME/.kube/config

      - name: Ensure namespace demo exists
        run: |
          kubectl get ns demo || kubectl create namespace demo

      - name: Ensure deployment exists
        run: |
          kubectl -n demo get deploy flask-deploy || \
            kubectl apply -f 04_k8s/ -n demo

      - name: Update deployment image
        run: |
          kubectl -n demo set image deploy/flask-demo \
            flas-demok=${{ env.IMAGE_FULL }}

      - name: Wait for rollout
        run: kubectl -n demo rollout status deploy/flask-demo --timeout=120s
